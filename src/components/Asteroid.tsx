/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { useRef } from 'react'
import * as THREE from 'three'

const material = new THREE.MeshStandardMaterial({
  color: new THREE.Color(0.2, 0.2, 0.2),
  // emissive: new THREE.Color(1.8, 0, 0.3), // WHITE emissive COLOR
  // emissiveIntensity: 2, // Intensity of emissive COLOR
})

const texture = new THREE.TextureLoader().load('/moonD.jpeg')
material.map = texture

export default function Model(props) {
  const group = useRef<THREE.Group>(null!)
  // @ts-ignore
  const { nodes, materials } = useGLTF('/asteroid.gltf')

  useFrame((state) => {
    if (!group.current) return
    const t = state.clock.getElapsedTime()
    group.current.rotation.set(
      Math.sin(t / 8) / 2,
      Math.cos(t / 8) / 2,
      Math.sin(t / 8) / 2
    )
  })
  return (
    <group {...props} dispose={null} ref={group}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.rock.geometry}
        material={material}
      />
    </group>
  )
}

useGLTF.preload('/asteroid.gltf')
